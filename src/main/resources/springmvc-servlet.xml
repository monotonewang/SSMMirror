<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置处理器映射器 springmvc框架根据HandlerMapping接口判断是否是处理器映射器 -->
    <!-- 根据bean的name进行查找Handler 将action的url配置在bean的name中 -->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->

    <!-- 配置处理器适配器 springmvc框架根据HandlerAdapter接口判断是否是处理器适配器 -->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--<bean name="/itemList.action" class="com.demo.springmvc.controller.ItemController"/>-->

    <!--HttpRequestHandler-->
    <!--<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/>-->

    <!--<bean name="/itemList1.action" class="com.demo.springmvc.controller.ItemController1"/>-->

    <!--注解Controller-->
    <context:component-scan base-package="com.demo.springmvc.controller,com.demo.fukiapi.home.controller"/>

    <!--处理器映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->

    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->

    <!--下面的可以替代处理器映射器和处理器适配器-->
    <!--<mvc:annotation-driven/>-->

    <!--自定义绑定,使用属性编辑器-老方法-->
    <!--注册属性编辑器-->
    <!--<bean id="customPropertyEditor" class="com.demo.springmvc.controller.propertyeditor.CustomPropertyEditor"/>-->

    <!--处理器映射器-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <!-- 自定义webBinder -->
    <bean id="customBinder" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <!-- 使用converter进行参数转 -->
        <property name="conversionService" ref="conversionService"/>
        <property name="validator" ref="validator"/>
        <!-- propertyEditorRegistrars用于属性编辑器 -->
        <!--<property name="propertyEditorRegistrars">-->
        <!--<list>-->
        <!--<ref bean="customPropertyEditor"/>-->
        <!--</list>-->
        <!--</property>-->
    </bean>

    <!-- 处理器适配器++注解适配器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--在webBindingInitializer中注入自定义属性编辑器、自定义转换器 -->
        <property name="webBindingInitializer" ref="customBinder"/>
        <!--加入json消息数据转换器-->
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--自定义参数绑定++使用转化器-->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.demo.springmvc.controller.converter.CustomDateConverter"/>
                <bean class="com.demo.springmvc.controller.converter.StringTrimConverter"/>
            </list>
        </property>
    </bean>

    <!--方法一:不适用   mvc-annotation-driven-->
    <!--注册使用转化器-->
    <!--参考 自定义webBinder 和 处理器适配器-注解适配器 -->

    <!--方法二：使用   mvc-annotation-driven-->
    <!-- 通过annotation-driven可以替代下边的处理器映射器和适配器 -->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->

    <!--文件上传-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>


    <!-- 校验器 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- 校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 资源文件名 -->
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings" value="utf-8"/>
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120"/>
    </bean>

    <!--定义统一的异常处理器-->
    <!--<bean class="com.demo.springmvc.exception.CustomExceptionResolver"/>-->


    <!--静态资源的解析-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/img/**" location="/img/"/>

    <!--定义拦截器-->
    <mvc:interceptors>
        <!--多个拦截器，顺序执行-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.demo.springmvc.controller.interceptor.HandlerInterceptor1"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.demo.springmvc.controller.interceptor.HandlerInterceptor2"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.demo.springmvc.controller.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>