<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--===========================aspectJ通过*注解*自动生成代理=====================================-->
    <aop:aspectj-autoproxy/>
    <bean id="userDaoAspect" class="com.demo.spring.aop.autoproxy.aspects.annoation.UserDao"/>
    <bean id="myAspect" class="com.demo.spring.aop.autoproxy.aspects.annoation.MyAspect"/>

    <!--===========================aspectJ通过*XML*自动生成代理=====================================-->
    <!-- 定义被增强的类 -->
    <bean id="productDaoXML" class="com.demo.spring.aop.autoproxy.aspects.xml.ProductDao"/>

    <!-- 定义切面 -->
    <bean id="myAspectXML" class="com.demo.spring.aop.autoproxy.aspects.xml.MyAspectXML"/>

    <!-- 定义aop配置 -->
    <aop:config>
        <!-- 定义切点: -->
        <aop:pointcut expression="execution(* com.demo.spring.aop.autoproxy.aspects.xml.ProductDao.add(..))" id="mypointcut"/>
        <aop:aspect ref="myAspectXML">
            <!-- 前置通知 -->
            <!-- <aop:before method="before" pointcut-ref="mypointcut"/> -->
            <!-- 后置通知 -->
            <!-- <aop:after-returning method="afterReturing" pointcut-ref="mypointcut" returning="returnVal"/> -->
            <!-- 环绕通知 -->
            <!-- <aop:around method="around" pointcut-ref="mypointcut"/> -->
            <!-- 异常通知 -->
            <!-- <aop:after-throwing method="afterThrowing" pointcut-ref="mypointcut" throwing="e"/> -->
            <!-- 最终通知 -->
            <aop:after method="after" pointcut-ref="mypointcut"/>
        </aop:aspect>
    </aop:config>
    <!--<import resource="applicationContextjdbc.xml"/>-->
</beans>